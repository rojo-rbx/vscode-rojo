{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "required": ["name", "tree"],
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "title": "Project name",
      "examples": ["your-project-name"]
    },
    "servePort": {
      "type": "integer",
      "title": "Serve port",
      "description": "The port number Rojo will use to communicate with Roblox Studio. This must be unique if you're running more than one instance of Rojo."
    },
    "servePlaceIds": {
      "type": "array",
      "title": "Serve place IDs",
      "description": "The set of place IDs that this project is compatible with when doing live sync. This setting is intended to help prevent syncing a Rojo project into the wrong Roblox place.",
      "items": {
        "type": "number"
      }
    },
    "placeId": {
      "type": "integer",
      "title": "Place ID",
      "description": "Sets the current place's place ID when connecting to the Rojo server from Roblox Studio."
    },
    "gameId": {
      "type": "integer",
      "title": "Game ID",
      "description": "Sets the current place's game ID when connecting to the Rojo server from Roblox Studio."
    },
    "serveAddress": {
      "type": "string",
      "title": "Serve address",
      "description": "This address will be used in place of the default address, as long as --address is unprovided."
    },
    "globIgnorePaths": {
      "type": "array",
      "title": "Glob ignore paths",
      "description": "A list of globs, relative to the folder the project file is in, that match files that should be ignored if Rojo encounters them.",
      "items": {
        "type": "string"
      }
    },
    "emitLegacyScripts": {
      "type": "boolean",
      "title": "Emit legacy scripts",
      "description": "Whether to emit scripts using the legacy ClassName or using RunContext."
    },
    "tree": {
      "if": {
        "properties": {
          "$className": {
            "const": "DataModel"
          }
        },
        "required": ["$className"]
      },
      "then": {
        "allOf": [
          {
            "$ref": "#/$defs/tree"
          },
          {
            "properties": {
              "StarterPlayer": {
                "allOf": [
                  {
                    "$ref": "#/$defs/tree"
                  },
                  {
                    "properties": {
                      "StarterPlayerScripts": {
                        "$ref": "#/$defs/treeService"
                      },
                      "StarterCharacterScripts": {
                        "$ref": "#/$defs/treeService"
                      }
                    },
                    "patternProperties": {
                      "^[^\\$].*$": {
                        "$ref": "#/$defs/treeNormal"
                      }
                    }
                  }
                ]
              },
              "Workspace": {
                "allOf": [
                  {
                    "$ref": "#/$defs/tree"
                  },
                  {
                    "properties": {
                      "Terrain": {
                        "$ref": "#/$defs/treeService"
                      }
                    },
                    "patternProperties": {
                      "^[^\\$].*$": {
                        "$ref": "#/$defs/treeNormal"
                      }
                    }
                  }
                ]
              }
            },
            "patternProperties": {
              "^[^\\$].*$": {
                "$ref": "#/$defs/treeService"
              }
            }
          }
        ]
      },
      "else": {
        "$ref": "#/$defs/treeNormal"
      }
    }
  },
  "$defs": {
    "tree": {
      "type": "object",
      "properties": {
        "$className": {
          "anyOf": [
            {
              "type": "string"
            }
          ]
        },
        "$ignoreUnknownInstances": {
          "type": "boolean"
        },
        "$path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "object",
              "properties": {
                "optional": {
                  "type": "string"
                }
              },
              "required": ["optional"]
            }
          ]
        },
        "$properties": {
          "type": "object",
          "properties": {
            "Name": false,
            "Parent": false
          }
        }
      }
    },
    "treeNormal": {
      "allOf": [
        {
          "$ref": "#/$defs/tree"
        },
        {
          "anyOf": [
            {
              "required": ["$className"]
            },
            {
              "required": ["$path"]
            }
          ],
          "patternProperties": {
            "^[^\\$].*$": {
              "$ref": "#/$defs/treeNormal"
            }
          }
        }
      ]
    },
    "treeService": {
      "allOf": [
        {
          "$ref": "#/$defs/tree"
        },
        {
          "patternProperties": {
            "^[^\\$].*$": {
              "$ref": "#/$defs/treeNormal"
            }
          }
        }
      ]
    }
  }
}
